import React, { useState } from "react";
import { formatMarketCap } from "../../../utils/utils";
import { useNavigate } from "react-router-dom";

const TokenList = ({ tokens, selectedTokens, onTokenSelect }) => {
  const navigate = useNavigate();
  const handleClickToken = (token) => {
    console.log("ðŸš€ ~ TokenList ~ token:", token);
  };

  return (
    <div className="pb-[100px]">
      {tokens.map((token, index) => {
        const isSelected = selectedTokens.includes(token);

        return (
          <div
            key={index}
            className={`w-full grid grid-cols-2 px-2 py-2 my-2 ${
              isSelected ? "bg-[#6B61FF]" : "bg-[#353535]"
            }`}
            onClick={() => handleClickToken(token)}
          >
            <div className="grid grid-cols-2">
              <div className="flex flex-col gap-2 items-center justify-center">
                <img src={token.image_url} alt={token.name} className="w-[42px] h-[42px]" />
                <h3 className="font-[600] text-[12px] text-[#D2D2D2]">{token.symbol}</h3>
              </div>
              <div className="flex flex-col items-start gap-2 m-1 justify-center text-[10px]">
                <p className="text-white">{token.price_usd.toFixed(4)}</p>
                <svg
                  width="54"
                  height="21"
                  viewBox="0 0 54 21"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 19.7421L1.24074 20.0129C1.54755 20.358 2.11828 20.141 2.11828 19.6792V19.1159C2.11828 18.8511 2.44556 18.7266 2.62151 18.9245V18.9245C2.79745 19.1224 3.12473 18.998 3.12473 18.7332V17.2707C3.12473 17.0353 3.41565 16.9247 3.57204 17.1006V17.1006C3.72844 17.2765 4.01935 17.1659 4.01935 16.9305V16.5343C4.01935 16.2046 4.42689 16.0496 4.64597 16.296V16.296C4.78862 16.4565 5.03934 16.4565 5.18199 16.296L6.29888 15.0397C6.40115 14.9247 6.5914 14.997 6.5914 15.1509V15.1509C6.5914 15.3049 6.78164 15.3772 6.88391 15.2622L7.83991 14.1868C8.14626 13.8423 8.71613 14.0589 8.71613 14.52V14.52C8.71613 14.6428 8.76121 14.7614 8.84282 14.8532L10.9298 17.2006C11.2897 17.6055 11.9591 17.3509 11.9591 16.8092V16.8092C11.9591 16.4839 12.2229 16.2201 12.5482 16.2201H12.5765C12.7529 16.2201 12.9208 16.1447 13.038 16.0129L13.6925 15.2767C13.9603 14.9755 14.4311 14.9755 14.6989 15.2767L14.8667 15.4654C15.0452 15.6663 15.3591 15.6663 15.5376 15.4654L15.7391 15.2388C15.8104 15.1586 15.9358 15.1586 16.0071 15.2388V15.2388C16.1167 15.362 16.3204 15.2845 16.3204 15.1196V13.7437C16.3204 13.5203 16.6285 13.4604 16.7122 13.6676V13.6676C16.7776 13.8293 17.0029 13.839 17.0819 13.6835L17.5975 12.6685C17.642 12.5809 17.7742 12.6126 17.7742 12.7108V12.7108C17.7742 12.8138 17.9166 12.8409 17.9544 12.7451L18.3738 11.6839C18.4357 11.527 18.6688 11.5714 18.6688 11.7401V11.7401C18.6688 11.8972 18.8774 11.9521 18.9548 11.8153L19.0602 11.6289C19.1661 11.4417 19.4516 11.5169 19.4516 11.732V11.9244C19.4516 12.1736 19.7683 12.2799 19.9187 12.0813L21.8327 9.55397C21.8942 9.47279 22.0237 9.51627 22.0237 9.6181V9.6181C22.0237 9.72952 22.1733 9.76578 22.2243 9.66672L23.043 8.07611C23.0966 7.97207 23.2538 8.01015 23.2538 8.12716V8.12716C23.2538 8.24155 23.4054 8.28183 23.4622 8.18252L23.757 7.66667C23.894 7.42686 24.2602 7.52411 24.2602 7.80032V8.43279C24.2602 8.50778 24.2795 8.58152 24.3162 8.64691L25.0369 9.93047C25.1891 10.2015 25.6022 10.0935 25.6022 9.78264V9.78264C25.6022 9.56008 25.8347 9.41401 26.0352 9.51065L26.0683 9.52661C26.239 9.6089 26.4437 9.52828 26.5124 9.35165L26.9456 8.2377C27.0279 8.02627 27.3245 8.01925 27.4166 8.22655V8.22655C27.5162 8.45047 27.8434 8.419 27.8984 8.18022L28.2158 6.80345C28.3101 6.39436 28.8707 6.34044 29.0412 6.72407V6.72407C29.0595 6.76522 29.084 6.80329 29.114 6.83695L29.5386 7.31457C29.6811 7.47492 29.943 7.42691 30.0194 7.22641L30.1262 6.94602C30.1539 6.87322 30.249 6.85579 30.3008 6.91401V6.91401C30.3516 6.97124 30.4449 6.95555 30.4742 6.88482L31.0758 5.43484C31.1014 5.37297 31.1935 5.39132 31.1935 5.4583V5.4583C31.1935 5.52586 31.2869 5.54363 31.3117 5.4808L31.5305 4.92715C31.5715 4.82324 31.7175 4.82018 31.7629 4.92227V4.92227C31.8049 5.01687 31.9368 5.02324 31.9877 4.93314L32.5367 3.96276C32.5666 3.90987 32.6473 3.93111 32.6473 3.99187V3.99187C32.6473 4.05573 32.7345 4.07424 32.7605 4.01589L33.1968 3.03438C33.2335 2.95183 33.3548 2.96661 33.3707 3.05555V3.05555C33.387 3.14767 33.5147 3.15886 33.5469 3.07101L33.8757 2.17275C33.9425 1.99022 34.2129 2.03815 34.2129 2.23254V2.23254C34.2129 2.36072 34.3469 2.44486 34.4623 2.38919L34.6735 2.28739C34.8456 2.20445 35.0515 2.28911 35.1155 2.46908L35.351 3.13111C35.411 3.29991 35.5195 3.44726 35.6628 3.55474L36.5509 4.22076C36.7856 4.39672 37.1204 4.22928 37.1204 3.93599V3.93599C37.1204 3.82922 37.1684 3.72809 37.251 3.66048L38.0881 2.97568C38.193 2.88985 38.3505 2.9645 38.3505 3.10005V3.10005C38.3505 3.22625 38.4893 3.30319 38.5964 3.23632L39.1912 2.86461C39.2634 2.81951 39.357 2.8714 39.357 2.95652V2.95652C39.357 3.06933 39.5079 3.10706 39.561 3.00752L39.7647 2.62566C39.8578 2.45108 40.117 2.4825 40.1657 2.67428L40.2516 3.01258L40.851 4.85126C40.965 5.20116 41.4817 5.11907 41.4817 4.75105V4.75105C41.4817 4.68389 41.5026 4.61839 41.5416 4.56366L42.5449 3.1529C42.668 2.97981 42.9327 3.00635 43.019 3.20045V3.20045C43.1288 3.44758 43.4922 3.40333 43.5396 3.13707L43.5467 3.09695C43.5969 2.81491 43.984 2.77267 44.0938 3.03727L44.1951 3.28126C44.2942 3.52033 44.6402 3.49736 44.7069 3.24727L44.7289 3.16466C44.7751 2.99162 44.9951 2.93938 45.1141 3.07322V3.07322C45.2339 3.20797 45.4556 3.15395 45.5 2.9792L45.54 2.82182C45.58 2.66432 45.7586 2.58777 45.9003 2.66743V2.66743C45.9983 2.72254 46.1211 2.70448 46.1991 2.62351L47.0864 1.70223C47.3066 1.47355 47.6833 1.51323 47.851 1.78279V1.78279C48.0506 2.10347 48.5256 2.08061 48.6995 1.74531V1.74531C48.8722 1.41231 49.341 1.38245 49.5491 1.69455L49.6511 1.84754C49.8579 2.1576 50.3159 2.15041 50.5128 1.83401V1.83401C50.6938 1.54323 51.1035 1.50831 51.3311 1.76427L51.563 2.0251C51.6256 2.09561 51.6726 2.17867 51.7006 2.26874V2.26874C51.9026 2.91781 52.834 2.87915 52.9814 2.21558L53 2.13208"
                    stroke="#4FC17F"
                    stroke-linecap="round"
                  />
                </svg>
              </div>
            </div>
            <div className="grid grid-cols-3">
              <div className="grid grid-rows-2 col-span-2 items-center">
                <div className="grid grid-cols-2">
                  <div className="text-center">
                    <p className="font-[400] text-[14px]">
                      {token.avg_points > 0 ? token.avg_points : "NA"}
                    </p>
                  </div>
                  <div className="text-center">
                    <p className="font-[400] text-[14px]">{token.credits}</p>
                  </div>
                </div>
                <div className="text-[10px] font-[400] text-white">
                  Market Cap: ${formatMarketCap(token.market_cap_usd)}
                </div>
              </div>
              {!selectedTokens.includes(token) ? (
                <div className="items-center justify-center flex">
                  <button
                    className="p-2 text-white rounded-full bg-[#6B61FF] w-[24px] h-[24px] flex items-center justify-center"
                    onClick={() => onTokenSelect(token)}
                  >
                    +
                  </button>
                </div>
              ) : (
                <div className="items-center justify-center flex">
                  <button
                    className="p-2 text-white rounded-full bg-[#FF4545] w-[24px] h-[24px] flex items-center justify-center"
                    onClick={() => onTokenSelect(token)}
                  >
                    -
                  </button>
                </div>
              )}
            </div>
          </div>
        );
      })}
    </div>
  );
};

export default TokenList;
